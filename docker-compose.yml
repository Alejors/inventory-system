version: '3.8'

services:
  api:
    build: ./api
    container_name: inventory-api
    restart: always
    ports:
      - "${API_PORT}:3000"
    volumes:
      - ./api/src:/app/src
      - ./api/package.json:/app/package.json
      - ./api/package-lock.json:/app/package-lock.json
    working_dir: /app
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    command: ["npm", "run", "dev"]
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - inventory-network

  # prediction-service:
  #   build: ./prediction-service
  #   container_name: inventory-prediction
  #   restart: always
  #   ports:
  #     - "${PREDICTION_PORT}:5000"
  #   volumes:
  #     - ./prediction-service/src:/app/src
  #     - ./prediction-service/requirements.txt:/app/requirements.txt
  #   environment:
  #     - DB_HOST=mysql
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_NAME=${DB_NAME}
  #     - API_KEY=${PREDICTION_API_KEY}
  #   depends_on:
  #     - mysql
  #     - api
  #   networks:
  #     - inventory-network

  # frontend:
  #   build: ./frontend
  #   container_name: inventory-frontend
  #   restart: always
  #   ports:
  #     - "${FRONTEND_PORT}:3000"
  #   volumes:
  #     - ./frontend/src:/app/src
  #     - ./frontend/public:/app/public
  #     - ./frontend/package.json:/app/package.json
  #     - ./frontend/package-lock.json:/app/package-lock.json
  #   depends_on:
  #     - api
  #   networks:
  #     - inventory-network

  mysql:
    image: mysql:8.0
    container_name: inventory-mysql
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    command: ["mysqld", "--log-error-verbosity=1"]
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - inventory-network

networks:
  inventory-network:
    driver: bridge
